import{R as i,b as a,i as d}from"./app-CbaWAQcg.js";const l={computed:{loading(){return this.$store.state.static.loading},id(){return this.$route.query.id}},watch:{},created(){this.editId&&(this.formData=this.getItem()),this.$route.query.id&&this.getItemById(this.$route.query.id).then(t=>{this.formData=t})},methods:{getItem(){const t=this.$store.state.list.find(e=>e.id===parseInt(this.editId));return JSON.parse(JSON.stringify(t))},dispatchLoad(t=!1){if(t){this.$store.dispatch("mutedLoad",{loading:!0,listReload:!1});return}this.$store.dispatch("mutedLoad",{loading:!1,listReload:!0}),this.$store.dispatch("dropdownLoad",{hasDropdownLoaded:!1})},async createUpdate(t="",e="",r="../"){try{let s=null;if(this.dispatchLoad(!0),this.editId||this.id){const o=this.editId?this.editId:this.id;s=await i.putData(a,`${e}/${o}`,this.formData)}else s=await i.postData(a,t,this.formData);this.dispatchLoad(!1),d.success({title:"Success",message:s.message}),s.success&&this.$router.push({path:r})}catch(s){this.$store.dispatch("mutedLoad",{loading:!1,listReload:!1}),s.status==422&&(this.errors=s.errors),d.error({title:"Success",message:"Something went wrong"})}}}};export{l as f};
